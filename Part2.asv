%Part 1
close all;
clear all;
%W values
minW= 10;
dW = 10;
maxW= 70;
%N values - keep constant for part 1
minN = 10;
dN = 10;
maxN = 70;
%P values
minP = 5;
dP = 1;
maxP = 10;
%Inst values - number of instances
maxInst = 5;


%vectors to loop over
N = minN:dN:maxN;
P = minP:dP:maxP;
W = [10 20 40 80 160];
Inst = 1:maxInst;
Iter = 5:5:25;

% 5D matrix in which we store values
%Number of nodes, probabilities, maxWeight, Iteration, results
values = zeros(length(N), length(P), length(W), length(Inst), length(Iter), 4);

for n = N
    for p = 5
        for w = 40
            for i = 1:5
                if(p == 10)
                    filename = "graph\secondpart\maxcut_" + num2str(n) ... 
                        + "_" + num2str(p) ...
                        + "_" + num2str(w) ...
                        + "_instance_0" + num2str(i);
                else
                    filename = "graph\secondpart\maxcut_" + num2str(n) ... 
                        + "_0" + num2str(p) ...
                        + "_" + num2str(w) ...
                        + "_instance_0" + num2str(i);
                end
                for j = 5
                    n
                    [L,U, timeG, timeSDP] = SDP(filename, j);
                    n_time_algo(N(find(N == n),i) = timeG;
                    n_time_sdp(N(find(N == n),i) = timeSDP;
                end
            end
        end
    end
end
figure(1)
hold on
plot(N,mean(n_time_algo(10:10:70, :)*1000,2));
hold off
title("Runtime versus N, Goeman")
xlabel('N')
ylabel('Time (ms)')
text(N, mean(n_time_algo(N,:),2)*1000, num2str(mean(n_time_algo(N, :), 2)*1000));

figure(2)
hold on
plot(N,mean(n_time_sdp(10:10:70, :),2));
hold off
title("Runtime versus N, Solver")
xlabel('N')
ylabel('Time (s)')
text(N, mean(n_time_sdp(N,:),2), num2str(mean(n_time_sdp(N, :), 2)));

n_time_algo = zeros(length(N), 5);
n_time_sdp = zeros(length(N), 5);

for n = N
    for p = 5
        for w = 40
            for i = 1:5
                if(p == 10)
                    filename = "graph\secondpart\maxcut_" + num2str(n) ... 
                        + "_" + num2str(p) ...
                        + "_" + num2str(w) ...
                        + "_instance_0" + num2str(i);
                else
                    filename = "graph\secondpart\maxcut_" + num2str(n) ... 
                        + "_0" + num2str(p) ...
                        + "_" + num2str(w) ...
                        + "_instance_0" + num2str(i);
                end
                for j = 5
                    n
                    [L,U, timeG, timeSDP] = SDP(filename, j);
                    n_time_algo(N(find(N == n),i) = timeG;
                    n_time_sdp(N(find(N == n),i) = timeSDP;
                end
            end
        end
    end
end

figure(1)
hold on
plot(N,mean(n_time_algo(10:10:70, :)*1000,2));
hold off
title("Runtime versus N, Goeman")
xlabel('N')
ylabel('Time (ms)')
text(N, mean(n_time_algo(N,:),2)*1000, num2str(mean(n_time_algo(N, :), 2)*1000));

figure(2)
hold on
plot(N,mean(n_time_sdp(10:10:70, :),2));
hold off
title("Runtime versus N, Solver")
xlabel('N')
ylabel('Time (s)')
text(N, mean(n_time_sdp(N,:),2), num2str(mean(n_time_sdp(N, :), 2)));

